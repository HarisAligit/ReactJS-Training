{"ast":null,"code":"var _jsxFileName = \"/home/harisali/Desktop/haris/ReactJS/Day 2/src/calc.jsx\";\nimport { useState } from \"react\";\nimport Welcome from \"./test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n  }\n\n  toFahrenheit(celsius) {\n    return celsius * 9 / 5 + 32;\n  }\n\n  tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n\n    if (Number.isNaN(input)) {\n      return '';\n    }\n\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? this.tryConvert(temperature, this.toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? this.tryConvert(temperature, this.toFahrenheit) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Welcome, {\n        scale: \"c\",\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Welcome, {\n        scale: \"f\",\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Calc;","map":{"version":3,"names":["useState","Welcome","Calc","React","Component","constructor","props","handleCelsiusChange","bind","handleFahrenheitChange","state","temperature","scale","setState","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","render"],"sources":["/home/harisali/Desktop/haris/ReactJS/Day 2/src/calc.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport Welcome from \"./test\"\n\nclass Calc extends React.Component {\n\n    constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: 'f', temperature});\n  }\n\n  toCelsius (fahrenheit) {\n        return (fahrenheit - 32) * 5 / 9;\n    }\n\ntoFahrenheit (celsius) {\n        return (celsius * 9 / 5) + 32;\n    }\n\ntryConvert (temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n    return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? this.tryConvert(temperature, this.toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? this.tryConvert(temperature, this.toFahrenheit) : temperature;\n\n    return (\n        <div>\n            <Welcome\n          scale={\"c\"}\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <Welcome\n          scale={\"f\"}\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        {/* <BoilingVerdict\n          celsius={parseFloat(celsius)} /> */}\n        </div>\n    )\n}\n};\n\nexport default Calc;"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,QAApB;;;AAEA,MAAMC,IAAN,SAAmBC,KAAK,CAACC,SAAzB,CAAmC;EAE/BC,WAAW,CAACC,KAAD,EAAQ;IACnB,MAAMA,KAAN;IACA,KAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;IACA,KAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;IACA,KAAKE,KAAL,GAAa;MAACC,WAAW,EAAE,EAAd;MAAkBC,KAAK,EAAE;IAAzB,CAAb;EACD;;EAEDL,mBAAmB,CAACI,WAAD,EAAc;IAC/B,KAAKE,QAAL,CAAc;MAACD,KAAK,EAAE,GAAR;MAAaD;IAAb,CAAd;EACD;;EAEDF,sBAAsB,CAACE,WAAD,EAAc;IAClC,KAAKE,QAAL,CAAc;MAACD,KAAK,EAAE,GAAR;MAAaD;IAAb,CAAd;EACD;;EAEDG,SAAS,CAAEC,UAAF,EAAc;IACjB,OAAO,CAACA,UAAU,GAAG,EAAd,IAAoB,CAApB,GAAwB,CAA/B;EACH;;EAELC,YAAY,CAAEC,OAAF,EAAW;IACf,OAAQA,OAAO,GAAG,CAAV,GAAc,CAAf,GAAoB,EAA3B;EACH;;EAELC,UAAU,CAAEP,WAAF,EAAeQ,OAAf,EAAwB;IAC9B,MAAMC,KAAK,GAAGC,UAAU,CAACV,WAAD,CAAxB;;IACA,IAAIW,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;MACzB,OAAO,EAAP;IACC;;IACD,MAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;IACA,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;IACA,OAAOC,OAAO,CAACG,QAAR,EAAP;EACH;;EAECC,MAAM,GAAG;IACP,MAAMjB,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;IACA,MAAMD,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;IACA,MAAMM,OAAO,GAAGL,KAAK,KAAK,GAAV,GAAgB,KAAKM,UAAL,CAAgBP,WAAhB,EAA6B,KAAKG,SAAlC,CAAhB,GAA+DH,WAA/E;IACA,MAAMI,UAAU,GAAGH,KAAK,KAAK,GAAV,GAAgB,KAAKM,UAAL,CAAgBP,WAAhB,EAA6B,KAAKK,YAAlC,CAAhB,GAAkEL,WAArF;IAEA,oBACI;MAAA,wBACI,QAAC,OAAD;QACF,KAAK,EAAE,GADL;QAEF,WAAW,EAAEM,OAFX;QAGF,mBAAmB,EAAE,KAAKV;MAHxB;QAAA;QAAA;QAAA;MAAA,QADJ,eAKA,QAAC,OAAD;QACE,KAAK,EAAE,GADT;QAEE,WAAW,EAAEQ,UAFf;QAGE,mBAAmB,EAAE,KAAKN;MAH5B;QAAA;QAAA;QAAA;MAAA,QALA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAcH;;AAvDkC;;AAwDlC;AAED,eAAeP,IAAf"},"metadata":{},"sourceType":"module"}